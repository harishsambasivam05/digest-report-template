{"type":"operationStart","subtype":"profile","data":{"_id":"n9FJ3gsVFCatblcV","timestamp":"2023-05-08T11:39:22.715Z","state":"queued","mode":"standard","creationDate":"2023-05-08T11:39:22.716Z","modificationDate":"2023-05-08T11:39:22.716Z","shortid":"H43Pyuq","$entitySet":"profiles"},"doDiffs":false,"timestamp":1683545962716,"id":"on10osup020eqfv","previousOperationId":null,"operationId":"gtcacqfy0r165ux"}
{"type":"log","level":"info","message":"Render request 7 queued for execution and waiting for available worker","previousOperationId":"gtcacqfy0r165ux","timestamp":1683545962716,"id":"pzbr3uja7g63z4y"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"gtcacqfy0r165ux","timestamp":1683545962722,"id":"ktdl393gbgng98v","previousEventId":"on10osup020eqfv","operationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962722,"level":"info","message":"Starting rendering request 7","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"c6ocnjzycyagpu4","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962723,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"naucguap626ewjc","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962724,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"5tr5fwbcultzchp","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962727,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"owhnv1hcinsu1qa","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962738,"level":"warn","message":"Error when processing render request 7\n(because) error when evaluating custom script /samples/Orders/orders-script\nrequire of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n(sandbox.js line 55:108)\n\n  53 | }\n\n\nError: require of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n    at _require (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:79:19)\n    at require (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:112:21)\n    at VM2 Wrapper.apply (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/bridge.js:485:11)\n    at sandbox.js:2:15\n    at sandbox.js:55:108\n    at Script.runInContext (node:vm:141:12)\n    at VM.runScript (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/vm.js:285:18)\n    at VM.run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/vm.js:503:16)\n    at run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:173:25)\n    at run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:184:30)","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"tnt0dhmjbhi9ymv","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"log","timestamp":1683545962738,"level":"warn","message":"Rendering request 7 finished with error in 24 ms","meta":{"rootId":"2xk4cbcbuoh1t6t","id":"2xk4cbcbuoh1t6t"},"id":"5z4jbb458vl1sa5","previousOperationId":"0km9o7asw0qc5ui"}
{"type":"error","timestamp":1683545962740,"statusCode":400,"weak":true,"decoratedSuffix":"\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n(sandbox.js line 55:108)\n\n  53 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst https = require('https');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        https.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"0km9o7asw0qc5ui","id":"82gr13zh38ho2m3","stack":"Error: require of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n    at _require (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:79:19)\n    at require (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:112:21)\n    at VM2 Wrapper.apply (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/bridge.js:485:11)\n    at sandbox.js:2:15\n    at sandbox.js:55:108\n    at Script.runInContext (node:vm:141:12)\n    at VM.runScript (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/vm.js:285:18)\n    at VM.run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/vm2/lib/vm.js:503:16)\n    at run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:173:25)\n    at run (/Users/harish/Documents/scrut/digest notifications/jsreportapp/node_modules/@jsreport/jsreport-core/lib/worker/sandbox/createSandbox.js:184:30)","message":"Error when evaluating custom script /samples/Orders/orders-script\nrequire of \"https\" module has been blocked. To be able to require custom modules you need to add to configuration { \"trustUserCode\": true } or enable just specific module using { sandbox: { allowedModules\": [\"https\"] }\n\n(sandbox.js line 2:15)\n\n  1 | // server side script fetching remote data and preparing report data source\n> 2 | const https = require('https');\n    |               ^\n  3 |\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n\n(sandbox.js line 55:108)\n\n  53 | }\n\n"}
